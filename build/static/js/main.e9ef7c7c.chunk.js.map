{"version":3,"sources":["components/SideMenu.js","components/Header.js","components/ArticleInfoCard.js","components/List.js","components/Card.js","components/Content.js","layout/AppLayout.js","App.js","serviceWorker.js","index.js"],"names":["SideMenu","react_default","a","createElement","layout","className","row","src","Component","Header","input","prefix","icon","type","style","fontSize","color","placeholder","avatar","size","ArticleInfoCard","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","onReadAllChange","state","label","fontColor","span","labelId","marginRight","value","popover","placement","content","trigger","List","onReadChange","e","tags","_this2","art","data","map","element","class","width","flexShrink","author","email","jobTitle","title","desc","es_button","hidden","isRead","id","Card","col","marginBottom","Content","changeMode","changeState","setState","viewMode","target","articles","numberOfUnRead","filter","article","length","numberOfArticles","sampleData","radioBackColor","iconImage","userlist","selectUserName","i","_this$state","components_Card","components_List","display","float","backgroundColor","padding","borderRadius","es_radio","Group","defaultValue","buttonStyle","onChange","Button","background","marginLeft","components_ArticleInfoCard","flexWrap","AppLayout","components_SideMenu","components_Header","components_Content","App","layout_AppLayout","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9ef7c7c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport '../App.css';\nimport { Layout, Menu, Breadcrumb, Icon, Input, Radio, Button } from 'antd';\nimport { Col, Row } from 'antd';\n\nclass SideMenu extends Component {\n  render(){\n    return (\n      <Layout className=\"SideMenu\">\n        <Row className=\"Logo\">\n\t\t\t<img src=\"/images/logo.png\" ></img>\n\t\t</Row>\n\t\t<Row className=\"Menu\">\n\t\t\t<Row className=\"MenuItem\">\n\t\t\t\t<img src=\"/images/dashboard_icon.svg\" ></img>\n\t\t\t</Row>\n\t\t\t<Row className=\"MenuItem\">\n\t\t\t\t<img src=\"/images/sessions_icon.svg\" ></img>\n\t\t\t</Row>\n\t\t\t<Row className=\"MenuItem\">\n\t\t\t\t<img src=\"/images/meetings_icon.svg\" ></img>\n\t\t\t</Row>\n\t\t\t<Row className=\"MenuItem\">\n\t\t\t\t<img src=\"/images/files_icon.svg\" ></img>\n\t\t\t</Row>\n\t\t\t<Row className=\"MenuItem\">\n\t\t\t\t<img src=\"/images/conversations_icon.svg\" ></img>\n\t\t\t</Row>\n\t\t\t<Row className=\"MenuItem\">\n\t\t\t\t<img src=\"/images/settings_icon.svg\" ></img>\n\t\t\t</Row>\n\t\t</Row>\n      </Layout>\n    )\n  }\n}\n\n\n\nexport default SideMenu;\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport '../App.css';\nimport { Layout, Menu, Breadcrumb, Icon, Input, Avatar, Button } from 'antd';\nimport { Col, Row } from 'antd';\n\nclass Header extends Component {\n  render(){\n    return (\n      <Layout className=\"Header\">\n        <Input className=\"SearchInput\" \n\t\t\tprefix={<Icon type=\"search\" style={{ fontSize: '25px', color: 'rgba(0,0,0,.25)' }} />}\n\t\t\tplaceholder=\"Find a user, team, meeting…\" />\n\t\t<Avatar className=\"Avatar\" size={64} src=\"images/avatar.png\" />\n      </Layout>\n    )\n  }\n}\n\n\n\nexport default Header;\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport '../App.css';\nimport { Layout, Menu, Popover, Icon, Input, Avatar, Button } from 'antd';\nimport { Col, Row } from 'antd';\n\nclass ArticleInfoCard extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\tlabel:[\n\t\t\t\t\"Number of articles\",\n\t\t\t\t\"Unread articles\"\n\t\t\t],\n\t\t\tfontColor:[\n\t\t\t\t\"#4DA1FF\",\n\t\t\t\t\"#FF6D4A\"\n\t\t\t]\n\t\t}\n\t}\n  onClick = () => {\n\t  this.props.onReadAllChange();\n  }\n  render(){\n    return (\n      <Layout className=\"ArticleInfoCard\">\n        <Row className=\"d-flex d-justify-between width-100\">\n\t\t\t<div span=\"10\">\n\t\t\t\t<div><strong>{this.state.label[this.props.labelId]}</strong></div>\n\t\t\t\t<div><span style={{fontSize: 24, color: this.state.fontColor[this.props.labelId], marginRight:10}} >{this.props.value}</span><span>This day</span></div>\n\t\t\t</div>\n\t\t\t<div  span = \"14\" className = \"popover\">\n\t\t\t\t<Popover\n\t\t\t\t\tplacement=\"bottom\" \n\t\t\t\t\tcontent= { <div onClick={this.onClick} className = \"popover\">Mark as Read</div> }\n\t\t\t\t\ttrigger=\"click\">\n\t\t\t\t\t<div><Icon type=\"dash\" /></div>\n\t\t\t\t</Popover>\n\t\t\t</div>\n\t\t</Row>\n      </Layout>\n    )\n  }\n}\n\n\n\nexport default ArticleInfoCard;\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport '../App.css';\nimport { Layout, Menu, Breadcrumb, Icon, Input, Avatar, Button } from 'antd';\nimport { Col, Row } from 'antd';\n\nclass List extends Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t}\n\n\tonReadChange=(e)=>{\n\t  this.props.onReadChange(e);\n  }\n  render(){\n\tlet art = this.props.data;\n\tlet tags = null;\n\ttags = art.tags.map((element) => <span className = \"ListTag\">{element}</span> );\n\n    return (\n      <div className=\"List\">\n\t  \t<div className = \"ListInfoCard\">\n\t\t  <div class=\"d-flex d-align-items-center\">\n\t\t  \t<div>\n\t\t\t  <Avatar className=\"Avatar\" size={64} src=\"images/avatar.png\" />\n\t\t\t</div>\n\t\t\t<div style={{width: '150px', flexShrink: 0}}>\n\t\t\t\t\t<div className = \"ListAuthorFont\">{art.author}</div>\n\t\t\t\t\t<div className = \"ListMailFont\">{art.email}</div>\n\t\t\t\t\t<div className = \"ListJobTileFont\">{art.jobTitle}</div>\n\t\t    </div>\n\t\t\t<div >\n\t\t\t\t<div className = \"block-with-text-list1 ListTitleFont\"><strong>{art.title}</strong></div>\n\t\t\t\t<div className = \"block-with-text-list ListDescFont\">{art.desc}</div>\n\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"d-flex\">\n\t\t\t\t<div className=\"ListTagContainer\">{ tags}</div>\n\t\t\t\t<div className=\"d-flex d-justify-content-center d-align-items-center\">\n\t\t\t\t\t<img style={{marginRight: 20}} src = \"images/delete.svg\"></img>\n\t\t\t\t\t<Button type=\"primary\" hidden = {art.isRead == true} onClick={ ()=>this.onReadChange(art.id) }>Mark as read</Button>\n\t\t\t\t\t<span className = \"ListMarkRed\" width={100} hidden ={art.isRead == true}></span>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t</div>\n      </div>\n    )\n  }\n}\n\n\n\nexport default List;\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport '../App.css';\nimport { Layout, Menu, Breadcrumb, Icon, Input, Avatar, Button } from 'antd';\nimport { Col, Row } from 'antd';\nimport ArticleInfoCard from './ArticleInfoCard';\n\nclass Card extends Component {\n  render(){\n\tlet art = this.props.data;\n    return (\n\t  \t<div className = \"CardInfo\">\n\t\t  <Row className=\"d-justify-content-between \">\n\t\t\t  <Col span={12} >\n\t    \t\t  <Avatar className=\"Avatar\" size={100} src=\"images/avatar.png\" />\n\t\t\t  </Col>\n\t\t\t  <Col span = {12}>\n\t\t\t\t<div className = \"CardFontBold\" style={{fontSize:\"18px\"}}>{art.author}</div>\n\t\t\t\t<div className = \"CardFont\" style={{marginBottom:\"10px\", fontSize:\"14px\"}}>{art.email}</div>\n\t\t\t\t<div className = \"CardFont\" style={{fontSize:\"15px\"}}>{art.jobTitle}</div>\n     \t\t\t</Col>\n\t\t  </Row>\n\t\t\t<div className = \"CardFontBold\" style={{marginBottom:\"15px\"}}>{art.title}\n\t\t\t</div>\n\t\t\t<div className = \"CardFont block-with-text\">{art.desc}</div>\n\t\t\t<div className = \"CardMarkRed\" hidden ={art.isRead == true}></div>\n\n\t\t</div>\n    )\n  }\n}\n\n\n\nexport default Card;\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport '../App.css';\nimport { Layout, Radio } from 'antd';\nimport { Col, Row } from 'antd';\nimport ArticleInfoCard from './ArticleInfoCard';\nimport List from './List';\nimport Card from './Card';\nimport sampleData from '../db.json';\n\nclass Content extends Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tviewMode : \"card\",\n\t\t\tnumberOfArticles : 0,\n\t\t\tnumberOfUnRead : 0,\n\t\t\tdata: sampleData,\n\t\t\tradioBackColor:[\n\t\t\t\t\"#F4F8F9\",\n\t\t\t\t\"#FFFFFFFF\"\n\t\t\t],\n\t\t\ticonImage:[\n\t\t\t\t\"/images/card_active.svg\",\n\t\t\t\t\"/images/card.svg\",\n\t\t\t\t\"/images/table.svg\",\n\t\t\t\t\"/images/table_active.svg\"\n\t\t\t],\n\t\t\tchangeState:1\n\t\t}\n\t\tthis.userlist =[]\n\t\tthis.selectUserName = []\n\t}\n\tchangeMode = (e) => {\n\t\tthis.state.changeState ^=1;\n\t\tthis.setState({viewMode: e.target.value});\n\t}\n\tonReadChange = (e) => {\n\t\tvar {data} = this.state;\n\t\tdata.articles[e].isRead = true;\n\t\tthis.setState({numberOfUnRead: data.articles.filter(article => article.isRead==false).length});\n\t\tthis.setState({data});\n\t}\n\tonReadAllChange(){\n\t\tvar {data} = this.state;\n\t\tfor( var i = 0; i < data.articles.length; i++ ){\n\t\t\tdata.articles[i].isRead = true;\n\t\t}\n\t\tthis.setState({data});\n\t\tthis.setState({numberOfUnRead: data.articles.filter(article => article.isRead==false).length});\n\t}\n\tcomponentDidMount(){\n\t\tconst {data} = this.state;\n\t\tthis.setState({numberOfArticles: data.articles.length});\n\t\tthis.setState({numberOfUnRead: data.articles.filter(article => article.isRead==false).length});\n\t}\n  render(){\n\tconst {viewMode, data} = this.state;\n\n\tlet articles = null\n\tif (viewMode == \"card\") {\n\t\tarticles = data.articles.map((element) => <Card data = {element} />);\n\t}else{\n\t\tarticles = data.articles.map((element) => <List data = {element} onReadChange={e=>this.onReadChange(e)}/>);\n\t}\n\t\n    return (\n      <Layout className=\"Content\">\n        <Row>\n\t\t\t<div style={{display:\"inline-block\", float:\"left\"}}>\n\t\t\t\t<span style={{fontSize: 20}}>Article</span>\n\t\t\t</div>\n\t\t\t<div style={{backgroundColor: \"#F4F8F9\", padding: 10, borderRadius: 5, display:\"inline-block\", float:\"right\"}}>\n\t\t\t\t<Radio.Group defaultValue=\"card\" buttonStyle=\"primary\" onChange={this.changeMode}>\n\t\t\t\t\t<Radio.Button value=\"card\" style = {{background:this.state.radioBackColor[this.state.changeState] }}><img src={this.state.iconImage[1-this.state.changeState]} ></img><span style={{marginLeft:'5px'}}>Card</span></Radio.Button>\n\t\t\t\t\t<Radio.Button  value=\"table\" style = {{background:this.state.radioBackColor[1-this.state.changeState] }}><img src={this.state.iconImage[3-this.state.changeState]} ></img><span style={{marginLeft:'5px'}}>Table</span></Radio.Button>\n\t\t\t\t</Radio.Group>\n\t\t\t</div>\n\t\t</Row>\n\t\t<Row className=\"ArticleInfoCardContainer\">\n\t\t\t<ArticleInfoCard value={this.state.numberOfArticles} labelId={0} onReadAllChange={()=>this.onReadAllChange()}/>\n\t\t\t<ArticleInfoCard value={this.state.numberOfUnRead} labelId ={1} onReadAllChange={()=>this.onReadAllChange()}/>\n\t\t</Row>\n        <Row>\n\t\t\t<div className = \"TodayFont\">Today</div>\n\t\t</Row>\n\t\t<Row className=\"d-flex\" style = {{flexWrap:\"wrap\"}}>{ viewMode == \"card\" && articles }</Row>\n\t\t<Row>{ viewMode == \"table\" && articles }</Row>\n      </Layout>\n    )\n  }\n}\n\n\n\nexport default Content;\n","import React, { Component } from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport '../App.css';\nimport { Layout, Menu, Breadcrumb, Icon, Input, Radio, Button } from 'antd';\nimport { Col, Row } from 'antd';\n\nimport SideMenu from \"../components/SideMenu\";\nimport Header from \"../components/Header\";\nimport Content from \"../components/Content\";\n\nclass AppLayout extends Component {\n  render(){\n    return (\n      <Layout className=\"MainLayout\">\n        <SideMenu />\n\t\t<Row className=\"MainContent\">\n\t\t\t<Header />\n\t\t\t<Content />\n\t\t</Row>\n      </Layout>\n    )\n  }\n}\n\n\n\nexport default AppLayout;\n","import React, { Component } from 'react';\nimport AppLayout from './layout/AppLayout';\n\nclass App extends Component {\n\n  render(){\n    return (\n      <AppLayout />\n    )\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}